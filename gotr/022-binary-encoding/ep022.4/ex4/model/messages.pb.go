// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReqType int32

const (
	ReqType_INVALID     ReqType = 0
	ReqType_ADD         ReqType = 1
	ReqType_AVG         ReqType = 2
	ReqType_RANDOM      ReqType = 3
	ReqType_SPELL_CHECK ReqType = 4
	ReqType_SEARCH      ReqType = 5
)

var ReqType_name = map[int32]string{
	0: "INVALID",
	1: "ADD",
	2: "AVG",
	3: "RANDOM",
	4: "SPELL_CHECK",
	5: "SEARCH",
}

var ReqType_value = map[string]int32{
	"INVALID":     0,
	"ADD":         1,
	"AVG":         2,
	"RANDOM":      3,
	"SPELL_CHECK": 4,
	"SEARCH":      5,
}

func (x ReqType) String() string {
	return proto.EnumName(ReqType_name, int32(x))
}

func (ReqType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

// ClientReq represents a request from a client with work to
// to be done by the server
type ClientReq struct {
	ID                   uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Type                 ReqType  `protobuf:"varint,2,opt,name=Type,proto3,enum=model.ReqType" json:"Type,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientReq) Reset()         { *m = ClientReq{} }
func (m *ClientReq) String() string { return proto.CompactTextString(m) }
func (*ClientReq) ProtoMessage()    {}
func (*ClientReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

func (m *ClientReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientReq.Unmarshal(m, b)
}
func (m *ClientReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientReq.Marshal(b, m, deterministic)
}
func (m *ClientReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientReq.Merge(m, src)
}
func (m *ClientReq) XXX_Size() int {
	return xxx_messageInfo_ClientReq.Size(m)
}
func (m *ClientReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientReq.DiscardUnknown(m)
}

var xxx_messageInfo_ClientReq proto.InternalMessageInfo

func (m *ClientReq) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *ClientReq) GetType() ReqType {
	if m != nil {
		return m.Type
	}
	return ReqType_INVALID
}

func (m *ClientReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterEnum("model.ReqType", ReqType_name, ReqType_value)
	proto.RegisterType((*ClientReq)(nil), "model.ClientReq")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_4dc296cbfe5ffcd5) }

var fileDescriptor_4dc296cbfe5ffcd5 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x8e, 0xc1, 0x4a, 0x85, 0x40,
	0x18, 0x85, 0x9b, 0x71, 0x54, 0xfa, 0x8d, 0x69, 0xf8, 0x57, 0x2e, 0xc5, 0x95, 0xb4, 0x70, 0x51,
	0x4f, 0x30, 0xcc, 0x48, 0x0e, 0x99, 0xd5, 0x18, 0x6e, 0xc3, 0x68, 0x88, 0x40, 0x53, 0xaf, 0x6e,
	0xee, 0xdb, 0x5f, 0x1c, 0xee, 0xee, 0xe3, 0x7c, 0xe7, 0xc0, 0x01, 0x3e, 0xb9, 0x6d, 0x1b, 0x7e,
	0xdd, 0x56, 0x2e, 0xa7, 0x79, 0x9f, 0x31, 0x9c, 0xe6, 0x1f, 0x37, 0xe6, 0x1d, 0xdc, 0xaa, 0xf1,
	0xcf, 0xfd, 0xef, 0xd6, 0xad, 0xc8, 0x81, 0x1a, 0x9d, 0x92, 0x8c, 0x14, 0xcc, 0x52, 0xa3, 0x31,
	0x07, 0xf6, 0x79, 0x5e, 0x5c, 0x4a, 0x33, 0x52, 0xf0, 0x47, 0x5e, 0xfa, 0x49, 0x69, 0xdd, 0x7a,
	0xa4, 0xd6, 0x3b, 0x44, 0x60, 0x7a, 0xd8, 0x87, 0x34, 0xc8, 0x48, 0x71, 0x67, 0x3d, 0x3f, 0x7c,
	0x40, 0x7c, 0x2d, 0x61, 0x02, 0xb1, 0x69, 0x7b, 0xd9, 0x18, 0x2d, 0x6e, 0x30, 0x86, 0x40, 0x6a,
	0x2d, 0x88, 0x87, 0xfe, 0x59, 0x50, 0x04, 0x88, 0xac, 0x6c, 0xf5, 0xdb, 0xab, 0x08, 0xf0, 0x1e,
	0x92, 0xee, 0xbd, 0x6a, 0x9a, 0x2f, 0x55, 0x57, 0xea, 0x45, 0xb0, 0x43, 0x76, 0x95, 0xb4, 0xaa,
	0x16, 0xe1, 0x77, 0xe4, 0x5f, 0x3f, 0x5d, 0x02, 0x00, 0x00, 0xff, 0xff, 0x6a, 0xbd, 0x2b, 0x99,
	0xc7, 0x00, 0x00, 0x00,
}
